@page "/"

@using System.Security.Claims;

@inherits AuthorizedPage

@inject ToastService _toastService

<PageTitle>Index</PageTitle>

<AuthorizeView>
    <Authorized>
        @if (@LoggedInUser == null)
        {
            <h1>Hello, Loading....</h1>
        }
        else
        {
            <h1>Hello, @LoggedInUser?.FirstName @LoggedInUser?.LastName!</h1>
            @if (claims.Count() > 0)
            {
                <ul>
                    @foreach (var claim in claims)
                    {
                        <li>@claim.Type: @claim.Value</li>
                    }
                </ul>
            }
        }
    </Authorized>
    <NotAuthorized>
        <h1>Hello, world!</h1>
    </NotAuthorized>
</AuthorizeView>
Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />

@code
{
    private string? authMessage;
        private string? surname;
        private IEnumerable<Claim> claims = Enumerable.Empty<Claim>();

        protected override async Task OnInitializedAsync()
        {
            await base.OnInitializedAsync();
        }

        protected override async Task OnAfterRenderAsync(bool firstRender)
        {
            await base.OnAfterRenderAsync(firstRender);
            if (firstRender)
            {
                await GetLoggedInUser(_toastService);
                GetClaimsPrincipalData();
                StateHasChanged();
            }
        }

        private void GetClaimsPrincipalData()
        {
            if (IsLoggedIn)
            {
                var user = AuthState!.User;
                if (user.Identity is not null && user.Identity.IsAuthenticated)
                {
                    authMessage = $"{user.Identity.Name} is authenticated.";
                    claims = user.Claims;
                    surname = user.FindFirst(c => c.Type == ClaimTypes.Surname)?.Value;
                }
                else
                {
                    authMessage = "The user is NOT authenticated.";
                }
            }
        }
    }